name: Docker
on: [push]
jobs:
  steamrt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make steamrt
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-steamrt

  build-base-i686:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make build-base-i686
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-build-base-i686

  build-base-x86_64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make build-base-x86_64
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-build-base-x86_64

  binutils-i686-linux-gnu:
    needs: build-base-i686
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make binutils-i686-linux-gnu
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-binutils-i686-linux-gnu

  binutils-i686-w64-mingw32:
    needs: build-base-i686
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make binutils-i686-w64-mingw32
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-binutils-i686-w64-mingw32

  binutils-x86_64-linux-gnu:
    needs: build-base-x86_64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make binutils-x86_64-linux-gnu
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-binutils-x86_64-linux-gnu

  binutils-x86_64-w64-mingw32:
    needs: build-base-x86_64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make binutils-x86_64-w64-mingw32
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-binutils-x86_64-w64-mingw32

  mingw-widl-i686:
    needs: build-base-i686
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make mingw-widl-i686
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-widl-i686

  mingw-widl-x86_64:
    needs: build-base-x86_64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make mingw-widl-x86_64
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-widl-x86_64

  mingw-headers-i686:
    needs: build-base-i686
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make mingw-headers-i686
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-headers-i686

  mingw-headers-x86_64:
    needs: build-base-x86_64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make mingw-headers-x86_64
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-headers-x86_64

  mingw-headers-llvm-i686:
    needs: build-base-i686
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make mingw-headers-llvm-i686
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-headers-llvm-i686

  mingw-headers-llvm-x86_64:
    needs: build-base-x86_64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make mingw-headers-llvm-x86_64
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-headers-llvm-x86_64

  mingw-gcc-i686:
    needs: [binutils-i686-w64-mingw32, mingw-headers-i686]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make mingw-gcc-i686
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-gcc-i686

  mingw-gcc-x86_64:
    needs: [binutils-x86_64-w64-mingw32, mingw-headers-x86_64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make mingw-gcc-x86_64
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-gcc-x86_64

  mingw-llvm-i686:
    needs: mingw-headers-llvm-i686
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make mingw-llvm-i686
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-llvm-i686

  mingw-llvm-x86_64:
    needs: mingw-headers-llvm-x86_64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make mingw-llvm-x86_64
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-llvm-x86_64

  mingw-crt-i686:
    needs: mingw-gcc-i686
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make mingw-crt-i686
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-crt-i686

  mingw-crt-x86_64:
    needs: mingw-gcc-x86_64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make mingw-crt-x86_64
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-crt-x86_64

  mingw-crt-llvm-i686:
    needs: mingw-llvm-i686
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make mingw-crt-llvm-i686
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-crt-llvm-i686

  mingw-crt-llvm-x86_64:
    needs: mingw-llvm-x86_64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make mingw-crt-llvm-x86_64
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-crt-llvm-x86_64

  mingw-pthreads-i686:
    needs: mingw-crt-i686
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make mingw-pthreads-i686
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-pthreads-i686

  mingw-pthreads-x86_64:
    needs: mingw-crt-x86_64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make mingw-pthreads-x86_64
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-pthreads-x86_64

  mingw-pthreads-llvm-i686:
    needs: mingw-crt-llvm-i686
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make mingw-pthreads-llvm-i686
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-pthreads-llvm-i686

  mingw-pthreads-llvm-x86_64:
    needs: mingw-crt-llvm-x86_64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make mingw-pthreads-llvm-x86_64
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-pthreads-llvm-x86_64

  mingw-libcxx-i686:
    needs: mingw-pthreads-llvm-i686
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make mingw-libcxx-i686
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-libcxx-i686

  mingw-libcxx-x86_64:
    needs: mingw-pthreads-llvm-x86_64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make mingw-libcxx-x86_64
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-libcxx-x86_64

  mingw-compiler-rt-i686:
    needs: mingw-libcxx-i686
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make mingw-compiler-rt-i686
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-compiler-rt-i686

  mingw-compiler-rt-x86_64:
    needs: mingw-libcxx-x86_64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make mingw-compiler-rt-x86_64
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-compiler-rt-x86_64

  gcc-i686-linux-gnu:
    needs: [binutils-i686-linux-gnu, mingw-pthreads-i686]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make gcc-i686-linux-gnu
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-gcc-i686-linux-gnu

  gcc-i686-w64-mingw32:
    needs: [binutils-i686-w64-mingw32, mingw-pthreads-i686]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make gcc-i686-w64-mingw32
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-gcc-i686-w64-mingw32

  gcc-x86_64-linux-gnu:
    needs: [binutils-x86_64-linux-gnu, mingw-pthreads-x86_64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make gcc-x86_64-linux-gnu
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-gcc-x86_64-linux-gnu

  gcc-x86_64-w64-mingw32:
    needs: [binutils-x86_64-w64-mingw32, mingw-pthreads-x86_64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make gcc-x86_64-w64-mingw32
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-gcc-x86_64-w64-mingw32

  wine-i686:
    needs: [gcc-i686-linux-gnu, gcc-i686-w64-mingw32, mingw-widl-i686]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make wine-i686
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-wine-i686

  wine-x86_64:
    needs: [gcc-x86_64-linux-gnu, gcc-x86_64-w64-mingw32, mingw-widl-x86_64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make wine-x86_64
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-wine-x86_64

  wine-llvm-i686:
    needs: [gcc-i686-linux-gnu, mingw-compiler-rt-i686, mingw-widl-i686]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make wine-llvm-i686
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-wine-llvm-i686

  wine-llvm-x86_64:
    needs: [gcc-x86_64-linux-gnu, mingw-compiler-rt-x86_64, mingw-widl-x86_64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make wine-llvm-x86_64
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-wine-llvm-x86_64

  proton:
    needs: [steamrt, gcc-x86_64-linux-gnu, gcc-x86_64-w64-mingw32, gcc-i686-linux-gnu, gcc-i686-w64-mingw32, mingw-widl-i686, mingw-widl-x86_64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make proton
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-proton

  devel-i686:
    needs: [wine-i686]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make devel-i686
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-devel-i686

  devel-x86_64:
    needs: [wine-x86_64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make devel-x86_64
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-devel-x86_64

name: dockerhub
on: [push]
jobs:
  steamrt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: make steamrt
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-steamrt

  matrix:
    runs-on: ubuntu-latest
    env:
      archs: '[\"i686\", \"x86_64\"]'
      targets: '[\"linux-gnu\", \"w64-mingw32\"]'
    outputs:
      archs: ${{ steps.set-matrix.outputs.archs }}
      targets: ${{ steps.set-matrix.outputs.targets }}
    steps:
    - id: set-matrix
      run: |
        echo archs="${{ env.archs }}" >> $GITHUB_OUTPUT
        echo targets="${{ env.targets }}" >> $GITHUB_OUTPUT

  build-base:
    runs-on: ubuntu-latest
    needs: [matrix]
    strategy:
      matrix:
        arch: ${{ fromJson(needs.matrix.outputs.archs) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: make build-base-${{ matrix.arch }}
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-build-base-${{ matrix.arch }}

  binutils:
    runs-on: ubuntu-latest
    needs: [matrix, build-base]
    strategy:
      matrix:
        arch: ${{ fromJson(needs.matrix.outputs.archs) }}
        target: ${{ fromJson(needs.matrix.outputs.targets) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: make binutils-${{ matrix.arch }}-${{ matrix.target }}
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-binutils-${{ matrix.arch }}-${{ matrix.target }}

  mingw-widl:
    runs-on: ubuntu-latest
    needs: [matrix, build-base]
    strategy:
      matrix:
        arch: ${{ fromJson(needs.matrix.outputs.archs) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: make mingw-widl-${{ matrix.arch }}
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-widl-${{ matrix.arch }}

  mingw-headers:
    runs-on: ubuntu-latest
    needs: [matrix, build-base]
    strategy:
      matrix:
        arch: ${{ fromJson(needs.matrix.outputs.archs) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: make mingw-headers-${{ matrix.arch }}
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-headers-${{ matrix.arch }}

  mingw-headers-llvm:
    runs-on: ubuntu-latest
    needs: [matrix, build-base]
    strategy:
      matrix:
        arch: ${{ fromJson(needs.matrix.outputs.archs) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: make mingw-headers-llvm-${{ matrix.arch }}
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-headers-llvm-${{ matrix.arch }}

  mingw-gcc:
    runs-on: ubuntu-latest
    needs: [matrix, binutils, mingw-headers]
    strategy:
      matrix:
        arch: ${{ fromJson(needs.matrix.outputs.archs) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: make mingw-gcc-${{ matrix.arch }}
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-gcc-${{ matrix.arch }}

  llvm:
    needs: [matrix, build-base]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: ${{ fromJson(needs.matrix.outputs.archs) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: make llvm-${{ matrix.arch }}
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-llvm-${{ matrix.arch }}

  llvm-base:
    needs: [matrix, llvm, mingw-headers-llvm]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: ${{ fromJson(needs.matrix.outputs.archs) }}
        target: ${{ fromJson(needs.matrix.outputs.targets) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: make llvm-base-${{ matrix.arch }}-${{ matrix.target }}
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-llvm-base-${{ matrix.arch }}-${{ matrix.target }}

  mingw-crt:
    runs-on: ubuntu-latest
    needs: [matrix, mingw-gcc]
    strategy:
      matrix:
        arch: ${{ fromJson(needs.matrix.outputs.archs) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: make mingw-crt-${{ matrix.arch }}
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-crt-${{ matrix.arch }}

  mingw-crt-llvm:
    runs-on: ubuntu-latest
    needs: [matrix, llvm-base]
    strategy:
      matrix:
        arch: ${{ fromJson(needs.matrix.outputs.archs) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: make mingw-crt-llvm-${{ matrix.arch }}
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-crt-llvm-${{ matrix.arch }}

  mingw-pthreads:
    runs-on: ubuntu-latest
    needs: [matrix, mingw-crt]
    strategy:
      matrix:
        arch: ${{ fromJson(needs.matrix.outputs.archs) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: make mingw-pthreads-${{ matrix.arch }}
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-mingw-pthreads-${{ matrix.arch }}

  llvm-libcxx:
    runs-on: ubuntu-latest
    needs: [matrix, llvm-base, mingw-crt-llvm]
    strategy:
      matrix:
        arch: ${{ fromJson(needs.matrix.outputs.archs) }}
        target: ${{ fromJson(needs.matrix.outputs.targets) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: make llvm-libcxx-${{ matrix.arch }}-${{ matrix.target }}
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-llvm-libcxx-${{ matrix.arch }}-${{ matrix.target }}

  gcc:
    runs-on: ubuntu-latest
    needs: [matrix, binutils, mingw-pthreads]
    strategy:
      matrix:
        arch: ${{ fromJson(needs.matrix.outputs.archs) }}
        target: ${{ fromJson(needs.matrix.outputs.targets) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: make gcc-${{ matrix.arch }}-${{ matrix.target }}
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-gcc-${{ matrix.arch }}-${{ matrix.target }}

  wine-base:
    runs-on: ubuntu-latest
    needs: [matrix]
    strategy:
      matrix:
        arch: ${{ fromJson(needs.matrix.outputs.archs) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: make wine-base-${{ matrix.arch }}
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-wine-base-${{ matrix.arch }}

  wine:
    runs-on: ubuntu-latest
    needs: [matrix, wine-base, gcc, mingw-widl]
    strategy:
      matrix:
        arch: ${{ fromJson(needs.matrix.outputs.archs) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: make wine-${{ matrix.arch }}
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-wine-${{ matrix.arch }}

  wine-llvm:
    runs-on: ubuntu-latest
    needs: [matrix, wine-base, llvm-libcxx, mingw-widl]
    strategy:
      matrix:
        arch: ${{ fromJson(needs.matrix.outputs.archs) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: make wine-llvm-${{ matrix.arch }}
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-wine-llvm-${{ matrix.arch }}

  proton-base:
    runs-on: ubuntu-latest
    needs: [steamrt]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: make proton-base
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-proton-base

  proton:
    runs-on: ubuntu-latest
    needs: [proton-base, gcc, mingw-widl]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: make proton
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-proton

  proton-llvm:
    runs-on: ubuntu-latest
    needs: [proton-base, llvm-libcxx, mingw-widl]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: make proton-llvm
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-proton-llvm

  devel:
    runs-on: ubuntu-latest
    needs: [matrix, wine]
    strategy:
      matrix:
        arch: ${{ fromJson(needs.matrix.outputs.archs) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: make devel-${{ matrix.arch }}
      - name: Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push
        run: make push-devel-${{ matrix.arch }}

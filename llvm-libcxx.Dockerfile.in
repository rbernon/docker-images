FROM @PROTONSDK_URLBASE@/llvm-@ARCH@:@LLVM_VERSION@ AS llvm
FROM @PROTONSDK_URLBASE@/llvm-base-@ARCH@-@TARGET@:@LLVM_VERSION@ AS llvm-base
FROM @PROTONSDK_URLBASE@/mingw-headers-llvm-@ARCH@:@MINGW_VERSION@ AS mingw-headers
FROM @PROTONSDK_URLBASE@/mingw-crt-llvm-@ARCH@:@MINGW_VERSION@ AS mingw-crt

FROM @BASE_IMAGE@ AS build

COPY --from=llvm           /opt/usr /usr
COPY --from=llvm-base      /opt/usr /usr
COPY --from=mingw-headers  /opt/usr /usr
COPY --from=mingw-crt      /opt/usr /usr

# From llvm-mingw:
# Copyright (c) 2018 Martin Storsjo
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

RUN wget -qO- https://github.com/llvm/llvm-project/archive/llvmorg-@LLVM_VERSION@.tar.gz | tar xzf - -C /tmp \
&& cd /tmp/llvm-project-llvmorg-@LLVM_VERSION@ \
&& cmake -Bbuild-libcxx -Hruntimes -GNinja \
   -DCMAKE_INSTALL_PREFIX=/usr/@ARCH@-@TARGET@ \
   -DCMAKE_BUILD_TYPE=Release \
   -DCMAKE_SYSTEM_NAME=@TARGET_SYSTEM@ \
   -DCMAKE_C_COMPILER=@ARCH@-@TARGET@-gcc \
   -DCMAKE_CXX_COMPILER=@ARCH@-@TARGET@-g++ \
   -DCMAKE_C_COMPILER_TARGET=@ARCH@-@TARGET@ \
   -DCMAKE_CXX_COMPILER_TARGET=@ARCH@-@TARGET@ \
   -DCMAKE_EXE_LINKER_FLAGS="-nostdlib++ -unwindlib=" \
   -DCMAKE_SHARED_LINKER_FLAGS="-unwindlib=" \
   -DCMAKE_CXX_FLAGS="-fPIC" \
   -DLLVM_ENABLE_RUNTIMES="libunwind;libcxxabi;libcxx" \
   -DHAVE_CXX_ATOMICS_WITHOUT_LIB=ON \
   -DHAVE_CXX_ATOMICS64_WITHOUT_LIB=ON \
   -DLIBUNWIND_ENABLE_ASSERTIONS=OFF \
   -DLIBUNWIND_ENABLE_CROSS_UNWINDING=OFF \
   -DLIBUNWIND_USE_COMPILER_RT=ON \
   -DLIBCXXABI_ENABLE_ASSERTIONS=OFF \
   -DLIBCXXABI_USE_COMPILER_RT=ON \
   -DLIBCXXABI_USE_LLVM_UNWINDER=ON \
   -DLIBCXXABI_ENABLE_SHARED=OFF \
   -DLIBCXXABI_INCLUDE_TESTS=OFF \
   -DLIBCXX_USE_COMPILER_RT=ON \
   -DLIBCXX_ENABLE_ASSERTIONS=OFF \
   -DLIBCXX_ENABLE_EXPERIMENTAL_LIBRARY=OFF \
   -DLIBCXX_ENABLE_STATIC_ABI_LIBRARY=ON \
   -DLIBCXX_INCLUDE_TESTS=OFF \
&& DESTDIR=/opt ninja -C build-libcxx install-unwind install-cxxabi install-cxx \
&& cmake -Bbuild-compiler-rt -Hruntimes -GNinja \
   -DCMAKE_INSTALL_PREFIX=/usr/lib/clang/@LLVM_VERSION@ \
   -DCMAKE_BUILD_TYPE=Release \
   -DCMAKE_SYSTEM_NAME=@TARGET_SYSTEM@ \
   -DCMAKE_C_COMPILER=@ARCH@-@TARGET@-gcc \
   -DCMAKE_CXX_COMPILER=@ARCH@-@TARGET@-g++ \
   -DCMAKE_C_COMPILER_TARGET=@ARCH@-@TARGET@ \
   -DCMAKE_CXX_COMPILER_TARGET=@ARCH@-@TARGET@ \
   -DCMAKE_CXX_FLAGS="-I/opt/usr/@ARCH@-@TARGET@/include/c++/v1" \
   -DCMAKE_EXE_LINKER_FLAGS="-L/opt/usr/@ARCH@-@TARGET@/lib" \
   -DCMAKE_SHARED_LINKER_FLAGS="-L/opt/usr/@ARCH@-@TARGET@/lib" \
   -DLLVM_ENABLE_RUNTIMES="compiler-rt" \
   -DCOMPILER_RT_USE_BUILTINS_LIBRARY=ON \
   -DCOMPILER_RT_BUILD_LIBFUZZER=OFF \
   -DSANITIZER_CXX_ABI=libcxxabi \
&& DESTDIR=/opt ninja -C build-compiler-rt install-compiler-rt \
&& rm -rf /opt/usr/share/doc /opt/usr/share/info /opt/usr/share/man \
&& rm -rf /tmp/llvm-project-llvmorg-@LLVM_VERSION@
